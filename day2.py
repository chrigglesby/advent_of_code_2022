data = """C X
C X
C X
A Z
C X
C X
A Y
B X
B Y
B Z
C Y
C X
C X
C Y
B Y
C X
C Y
B Z
C Y
B Z
B Z
A Z
C X
C X
C X
B Z
C Y
C X
C X
B Y
C X
B Z
C X
C X
A Y
C X
A Z
B Z
B Z
B Z
B Y
B Z
C X
B Y
C Y
C Y
B Z
C X
C Y
C X
C X
C X
C Y
A X
A X
C Z
C X
B Z
A Z
C X
B Y
C Y
B X
B Z
C Z
A X
C X
B X
C Y
C Y
B Z
B Z
B Z
C Z
A Z
A Z
C X
C X
C Z
B Z
B Y
C X
A Z
C X
B Y
C Y
B Z
C X
A Y
C Y
A X
B Z
C Y
C Y
C X
C Y
C X
B X
C Y
C X
B Y
A Z
B X
B Y
C Z
C X
C X
C X
B Z
B X
B Z
C X
B Y
B Z
C X
C Y
B Y
C Y
C X
B Z
B Y
B X
A Z
A Z
C X
C X
B Z
B Y
C X
C Y
C Y
A X
C X
C Y
A Y
C X
A Z
C Y
B X
B X
B X
B Y
B Y
C Z
C X
A Y
A Z
C X
B Z
C Y
C Y
A Y
B Z
B Z
C X
C Y
B X
C Y
B X
A Y
C X
B Z
A Z
C Y
A Z
A Y
C Z
B Y
A Z
A Y
C X
B Y
B X
C X
A Y
B Z
B Z
B Y
B Z
C X
C Z
B Y
B Y
A Y
B Z
B X
B Z
A X
C Y
B Z
A X
A X
B Y
C Z
C Z
B Z
B X
B X
A Z
A Y
A Y
C Z
C X
C X
C X
B Z
C Y
C Y
C Y
B X
B Y
A Y
B Z
B X
B Z
C X
B X
C X
C X
B Z
C Z
C Y
C X
C X
B Z
A Y
C X
C X
A Z
B Y
B X
B Y
B Z
C Y
A X
B Y
C X
A Z
B Z
A Y
C X
B Y
B Z
A Z
B Z
C Y
B Z
A X
A Y
B X
A X
B Y
C X
A X
B X
A X
A Z
B Z
C X
C X
A Y
B Z
C X
A Z
B Z
C X
C X
A Z
C Y
B Z
C X
B Y
B Y
A Z
C X
B Z
B Y
A Z
B Y
C X
C Y
A Y
B Y
C Z
A Y
C Z
A Z
B Z
C X
A X
B Z
C X
C Y
A X
C X
A Z
C Z
C X
C Z
B Z
C Y
B Y
B Z
C X
C X
B Y
C X
B Z
C Y
A X
A Z
B X
A Z
C Z
C Y
C Y
B Z
C Y
C X
C Y
B Y
C X
C X
C X
B Z
C X
C X
B Y
C Y
A Z
B Z
C Z
B Z
A Y
B Z
C X
C Z
B X
A Z
C X
C X
C Y
B Z
C Z
B Z
A Y
B Z
C Z
B Z
A Z
C X
A Z
A X
C X
B X
C X
C X
C Y
C X
C X
B Z
C X
A Z
B Z
B Y
C X
A Y
C Y
B Z
B Z
C X
A X
C X
B Z
C X
B X
B X
B Y
B Z
B X
B Y
C X
C X
B Y
C X
C X
A X
B Y
A Y
B Z
B Z
A X
C X
C X
C X
A Z
C X
B Y
A Z
A Y
B Z
B Y
B Z
C X
A Y
C X
C X
B Y
A X
A X
B X
C Y
C X
C X
B Y
B X
B Z
C Y
B X
C X
B Z
B Z
B Z
C X
C Z
A X
C X
C Z
A Y
B X
C Y
C Y
B Z
B Z
C Y
C X
A Z
A Z
C X
C Z
C X
C X
C X
C Y
B Z
B Y
B Z
C Y
A Y
A Z
C Y
C Z
C Z
B Z
B X
C X
C X
C X
B Y
C X
C X
C Z
A Z
C X
B X
B X
C X
C X
C X
C Y
B Z
B X
C Y
C X
B Y
A Y
A Z
C X
C Y
A Y
B Z
C X
B X
C X
C X
B X
B Z
B Y
C X
C Y
A Y
C X
C X
B Z
C Y
B Z
C Y
B Y
C Y
B Z
B Y
B Z
B Z
C X
B Z
A X
C Y
C X
C X
C X
C X
C Z
B Z
C X
C Y
C Z
C X
C Y
B Z
B Z
A Z
B X
A Z
B Y
A Y
C X
C X
C X
C X
C X
C X
A X
C X
C Y
B Z
C Y
C Y
C Y
B Y
C X
B Z
B Z
A X
C Z
C Z
B Y
B Z
C X
A X
C Z
B Z
B Z
C Z
B X
C X
B Z
A Z
B Z
C X
A X
B Y
B X
B Y
B Z
B Z
C Y
B X
B Y
C X
B Z
B Z
B Y
B Z
A Y
A X
C Z
C Y
B Z
B Z
A Y
A X
B Y
C X
B X
A Y
B Y
A Z
A X
B Y
B Z
A Z
C X
C X
C Y
C Y
B Y
C X
A Z
B Z
A X
C X
C X
B X
C Z
B Y
C Z
C Y
C X
B X
C Y
C Z
C X
B Z
C Y
C Y
B X
B Y
C X
B X
B X
A X
A Z
A X
A Y
C Z
B Z
C Y
C X
B X
A X
C Y
C X
C X
B X
B Y
A X
B Y
A Z
C X
B Z
C Y
B Z
B Z
B Z
C X
B Z
B X
C Y
C Y
C Y
B Z
B X
C Y
C Z
A Z
C Y
B Z
B X
B Z
B Y
A X
B Y
B Y
A Z
A X
B Z
C X
C Y
C X
C X
C X
A X
A Z
C Y
B Z
B X
C Z
C Y
C X
A X
C X
B X
C X
A X
B Y
C Y
B Z
C X
B Z
A Y
C X
C Y
A Z
B Z
B Z
C X
A Z
A X
C Y
C Y
A Z
C X
C Z
C Y
C X
C X
A Y
C X
C Y
A Y
C Y
C X
C Z
C X
A Y
C X
B Z
C X
C X
C X
B Y
A Y
A Y
C X
C X
B Z
B Z
C X
B Z
C X
A Y
B Y
C Y
B Z
C X
A X
C X
C X
C X
B X
B Y
A X
A X
B Z
C X
B Z
C X
C X
A Y
A Z
B Z
C X
B Z
B X
C X
B Y
B Z
B Z
C X
B Z
B Z
B Z
C X
B Y
B Z
A Z
C X
C X
B Z
A Y
B Y
C X
B Z
B Z
A Y
B X
B X
A X
A X
B Y
C X
A Z
B Y
B X
C X
B Z
B Y
A Z
C X
C X
B Z
C Y
B Z
C X
C Y
C X
C Z
C X
B Z
B Z
B Z
C X
C X
C X
B Z
C Y
B Y
B Z
C Z
C X
B Y
C X
A X
C Z
C X
C X
B Z
A Z
C X
C Y
C X
B Y
C Y
B X
C Z
C X
C Z
C X
B Z
B Y
B Y
A Z
B Y
C X
A X
C X
C Y
B Z
C X
C Z
C Z
B Y
C Y
B Z
C Y
C Y
C X
C X
A Y
B Y
B Y
C Y
B X
B Z
C X
C X
C Y
C X
B X
B Y
A Z
B Z
B Z
C X
C X
B Y
C X
B X
B Z
B Y
B Y
B Z
B Z
A Y
B Y
B Y
B X
A Y
C X
C Y
A Z
B Z
C X
B Y
C X
A Z
B Y
C X
C X
B Y
B Y
C Y
C X
B Y
C X
C X
B Z
C X
C X
C Y
B Z
C Y
C Y
A Z
C Y
B Y
C X
C Z
A X
C X
B Y
B Z
C Y
A Z
B Y
C Y
C Z
B Y
B Y
C X
C Z
B Z
C Z
C X
C X
C X
B Y
B Y
B Y
A Z
B Y
B Y
B Z
A Y
B Z
C X
C Z
B Z
C Z
B Y
B Z
C X
C X
C Y
C X
B Y
A Z
C Z
B Z
C X
B Y
A X
C X
A X
A Z
C X
B Y
B Z
B Z
A Z
C Z
C Y
C X
C Z
B X
C Y
C Z
B X
B X
A X
A Z
B Z
A Z
A X
C X
C X
A X
B Z
C Z
C Z
A X
B X
C X
B Z
B Y
A Z
A X
B Y
B Z
C X
B X
B Y
C X
C X
B Z
C Z
C X
C X
B Z
C X
B Z
C Y
C Y
C Y
B Z
C X
A X
B Y
B Y
A Y
C X
C X
C X
B Y
A Z
C X
C Y
C X
C X
B X
B Z
C X
C Z
A Z
B Z
C X
A Z
B Z
A X
C X
C Y
B Z
B X
B Y
B Z
C X
C X
C X
C X
B Y
C X
B Y
C X
C Y
B Z
C Y
C X
A X
C Z
C Y
A X
C X
B Z
B Y
B Y
C Y
C X
C Y
C X
B Z
B Z
C Y
B Z
B Z
B Z
B Z
C X
B Z
C X
A Z
B Z
B Y
A X
B Z
C Y
B Y
C Z
C X
A X
C X
A Y
B Z
B Y
B Z
C X
C Y
A Y
C X
C X
B Z
B Z
A Z
C X
A Z
C X
A X
B Y
C X
A Z
B Z
B Z
C X
C X
C Z
B Z
C X
A X
B X
B Y
C X
C X
C X
C Y
B Z
C Y
C X
C X
B Y
C X
A Z
A Z
C Y
B Y
B X
B Z
B Y
C Y
C Y
C X
A Z
B Z
B X
C X
C X
A X
C Z
A Y
C X
C Y
A Z
C Z
B Z
B Z
C X
B X
A Z
B Y
C X
A Z
C X
C Y
B Y
B Y
B X
B Z
C Y
B X
C X
B Y
C X
B Y
C X
B Y
A Y
A Z
C Y
A X
C X
C Z
B X
C Z
C Y
C Y
C X
C X
C X
C Y
C Z
A Z
B Z
C X
A X
A Z
B Y
C X
C X
C Z
C X
B Z
C X
B Y
B Z
B Y
C X
C Y
B Z
C Y
A X
C X
A Z
B Y
B Z
C X
B Z
C X
C Z
B Y
A X
C X
C X
C X
C X
B X
B Z
A Y
B Y
C X
B Z
C Z
C Y
A Z
C Y
A Y
B Z
C X
B Z
B Y
C Y
C Y
C Y
B Z
B Z
C X
C Z
C Z
B Y
B Y
C Z
B Y
C X
C Y
B Z
A Z
C Y
A Y
A X
B Z
B Y
C X
B Z
C X
A Z
C X
B Z
A X
C Y
C X
A Z
B Z
C Y
A Z
C Z
C X
A Y
B Z
C X
C X
B Y
A X
C Y
C X
C X
C Z
C X
A Y
C X
C X
A Y
B Z
B X
C X
B Z
C Z
C X
C Y
C Y
C X
B Z
A Y
C Y
C Y
B X
C X
B Z
B Y
B X
C X
C Z
B Z
B Z
B Z
C X
B Z
A Z
C X
C Y
C X
C Z
A Y
C Y
C Y
B Z
B Z
A Z
C Y
C Y
C X
B X
C X
C X
B X
C Z
A Z
A Y
C X
A Y
B Y
A X
C X
C X
B Z
B Y
C X
A Y
B Z
C Y
C X
C X
C X
B Z
B Y
B Y
C Z
B X
C X
C Z
C Z
C X
C X
C Z
C Z
B Z
C X
B Z
B Z
A X
A Z
B Y
B Y
A Y
A Z
B Z
C X
C Y
C X
A X
C X
A Y
A Z
A X
C Z
B Y
B Y
B X
C Z
B Y
C Y
B Y
C X
C Y
B X
A Y
C X
C X
B Z
C Z
A Z
C X
C Z
C X
A Z
B Z
B Y
C X
C X
B Y
B Y
C X
C Y
C Y
B Z
A Y
A Z
A Z
C Y
C X
C X
C X
C X
A X
A Z
A Z
B Y
B X
C Z
C Y
B Y
B Z
C X
B Y
B Z
B X
A Y
C Y
B Z
B X
C X
B Z
C Y
A X
C Z
C X
C Y
B Y
C X
C Y
C X
C X
B Y
B Y
B Z
C X
B Z
A X
C Y
B Y
C X
C X
B Z
B Y
B Y
C X
C Y
B Y
C Y
C X
C X
A Z
C Z
C Y
B X
B Z
B Z
B Z
A Y
B Y
C X
B Y
B X
C X
C X
A Y
C Z
A X
B Z
C X
C X
B Z
A Z
A Z
B Z
C X
C Y
A Z
B Z
C Z
C Z
C X
C X
C Y
C X
C X
B Z
A X
C Y
C Y
B Z
C Y
B Y
C Y
C X
C Y
B Y
C X
C Z
C X
C Z
C Y
C X
C X
A Z
B Y
C X
C X
B Z
C Z
B Z
C X
C X
C Z
C X
C X
B X
C X
B Z
B X
B Z
B Z
B Z
C X
B Y
B Z
C Y
C X
B Z
B Z
A Z
C X
B Z
A Z
B Z
B Z
B Z
C X
C X
C Y
C X
C X
B Z
B Y
B X
B X
C X
C X
B Z
B Y
C X
C X
B Z
C X
A Y
C X
C X
C X
B Z
C Y
C Y
B Y
B Y
B Y
A Y
B X
B Z
B Y
A Z
B X
C X
B Z
B Z
C Y
B Z
A X
B Z
C Y
A X
B X
A Z
B Y
B Z
C X
B Y
C X
B Z
B Z
A Z
B Y
C Y
C Y
C X
C Z
B Z
C X
C Y
A Z
B X
C X
A Z
C Y
C X
C Y
C X
B Z
B Z
C X
B Y
B Z
C X
C X
B Y
A Y
C X
C Z
C X
C X
C Y
C X
C X
C X
B Z
C X
B Y
C X
C Y
C X
C Y
A Z
B Z
A Z
C Y
C X
C X
B Y
A Z
C X
B X
C X
C Z
A Z
B Z
B Z
C Y
C Y
B Z
C X
C Z
A X
C X
B Y
B Z
B Y
B Y
C Z
A X
C Z
A X
B Z
B X
C X
B Z
B Z
A X
B Y
B Z
A X
C X
B Z
B Y
C X
C X
B Y
C Y
A Y
C Y
B X
B X
C X
C X
C Y
B Z
B Y
B Z
C X
B Y
B Y
B Z
B Y
B Y
C Y
C Z
C X
B Z
C X
B X
A Z
C X
C X
A Y
C Z
B X
C Y
B Y
C Z
B Z
C X
B Z
C X
C X
C Y
C Y
B Z
C X
C Z
C X
B Z
B Z
C X
B Z
C Y
C X
C X
A X
C X
B X
A Y
C Z
C Y
B Y
B X
C X
C Z
B Z
C Y
C Z
C X
C X
B X
A Z
B Y
C Z
A X
C X
C X
A Y
C Z
B X
B Z
C X
B Z
C Y
C Z
B Y
B X
C X
A Y
A X
C X
C X
B Z
C X
C X
C X
B Z
C X
A Z
B Y
C Z
C X
A Z
C X
C Z
B Z
B X
B X
B Y
C Y
A X
A X
A Z
C Z
C Y
A X
C X
A Z
B X
B Z
C X
B Y
B Y
B X
B X
B Y
B Y
B Z
C X
C Z
C Y
B Y
B Z
A Y
A Y
C X
B Z
C X
C X
B X
C X
B Z
B X
C Y
C X
C X
B Z
C Y
B X
A Z
C Y
C Y
C X
C X
B X
B Y
C X
B Z
C Y
B Y
B Z
A Z
C X
B Z
C X
B Z
C X
C X
C X
A Y
B X
A Z
C Y
C Z
B Y
B Y
A Y
B Y
B Z
B X
C X
B Y
B Y
B Z
A X
C Y
B Z
C Y
A Y
C X
B Z
A Z
B Z
B Y
B Y
B Y
B Z
B X
B Z
A Y
C Y
B Y
C X
C Y
B Y
B Z
C Y
C X
B Y
B Z
B Y
C Y
B Y
A X
C X
C X
B Z
B Z
B Y
B X
A X
B Y
A Z
A X
C Z
B Z
C X
C X
A Z
B Z
B Z
A Z
B Y
C X
C X
B X
C X
C Y
C X
B Z
A X
C X
B Y
C Z
A Y
B Z
C Y
A Y
B Y
B Y
B Z
B Z
C X
B Z
A X
C X
B Z
C X
C X
C X
A X
B X
A Z
B Z
A X
B X
C X
B Z
A Z
B Z
A Z
C X
C X
C X
C Y
B X
B Z
B Z
B Y
A Y
C Z
A X
B Y
C Y
B Z
B Z
B Z
B Z
C Y
B Y
B Z
B Z
C X
A Z
B Y
A Y
B Y
C Z
B X
C Y
B Z
C Y
C X
B Y
B Z
C Z
A Z
C Y
B Z
A X
C X
B Y
B Z
B X
C X
B Z
C Y
C X
C Z
B Y
C X
B Y
B Y
A X
C X
B Y
B X
C Z
C X
B Z
B Y
C Y
B Z
C Y
C Y
C Z
B Z
C Z
A Y
B X
B Z
C X
B Z
B X
B X
C Z
C Y
C Z
C X
B Y
C X
A X
B Y
B Y
C Y
C X
A Z
B Z
B Z
A Y
B Z
A X
C X
A Z
C X
B Y
C X
C X
A Y
A Z
B Z
A X
A X
B X
C X
C Z
B Y
A Y
B Y
A Z
B Z
A Y
B Z
C X
B Z
C X
C X
A Y
C X
C X
B Y
A Z
B Y
B Z
B Z
B Z
B Z
B Y
B Z
B Z
C X
B Z
C X
C Y
C Y
B Y
C Y
C X
A Z
B Y
A Z
B Y
C X
B Y
B X
B Z
B Y
B Y
B Z
C Z
B Z
B X
C X
B Z
C X
C X
A X
C X
B Y
B X
C Y
C Y
C Z
B Z
A Z
C X
B Z
B X
A Z
C X
C Y
C X
C X
A X
B Z
B Z
A Y
C X
B Y
B X
A Y
B Y
C X
C Y
C X
B Y
B Z
C X
B Y
C X
C X
C X
C Y
B Z
B Z
A Y
B Y
A Z
B Z
C X
B X
A Y
C Y
C Z
A Z
C Y
C X
B X
A Z
A Z
B Y
C X
B Z
B Z
C Y
B Z
B Z
C X
B Z
C X
A Z
C Y
B X
C Y
A X
B Y
B Z
A X
C Y
C X
C Y
C X
B Z
C X
C X
A Y
B Z
B Y
B Z
C Y
A Z
B Z
C X
B Y
C X
C X
C Y
C Z
B Z
B X
C X
C X
B Y
C X
C Y
A X
C Y
C X
C X
A Y
B Y
B Y
A X
C Y
B Z
B Z
C Z
B Z
B X
B Y
B X
B X
C X
C Y
A Z
C Z
C Y
B Z
B Y
A Y
C X
B Z
A X
C Y
A Z
C X
B Y
C Y
A X
A Z
A Z
B X
B Y
B Y
C X
B X
B Z
B Z
B Y
B X
B X
C Y
C Y
B Y
C Y
C X
B Y
B X
A Z
C Z
C X
B X
B Y
C Y
C Y
A X
C X
A Z
C X
A Y
B Y
C Y
A Z
B Y
B Y
A X
B Z
B Y
B X
A Y
B Z
C Z
C X
A Z
C Y
A X
A Z
C X
C Y
B Z
C X
B X
C Y
C X
B Z
C X
C X
B Y
B Y
C X
C X
B Y
C X
C Y
B Y
B X
C X
B Y
C Y
A Y
B Y
B Y
B Z
B Y
B X
A Y
C Y
C X
C Z
A Z
C X
A Z
C X
A Y
B Z
C Z
C Y
B Z
B Z
A Z
A X
C X
C Y
C X
C Z
B Z
A X
A Y
B Z
B Z
A X
C X
C Y
B X
C X
C Z
A X
B Y
A X
C Z
B Z
C X
C X
C X
B X
C Y
B Z
A X
B Z
A X
C Y
C X
A Y
C X
A Z
B Y
C X
C Y
B Z
C X
B Y
B Z
B Y
B Y
C X
C X
B Y
C X
C Y
C X
C Y
A Z
C X
C Y
B X
A Z
B Y
C X
C X
C Z
B Z
B Z
B X
C Z
B Z
B Z
C X
C X
C X
B X
B Z
B Z
C X
C X
C X
A X
C X
C Y
A Y
B X
A X
A Z
A Y
C X
B X
C Y
C X
C Y
C X
A X
B Z
A X
A X
B Z
C X
B Y
C X
B Y
B Z
C X
C Y
C Z
C X
C X
C X
C X
B Y
C Z
A Z
B Z
B Z
C X
C Z
B X
B Z
A Z
B Z
C Z
C X
C Y
B X
C Y
C Y
C X
B X
B X
C Y
C X
B Y
C Y
C X
B Z
B Z
A Y
A Z
C X
B Z
C X
A Z
B Z
C X
C X
C X
B Z
C X
B Y
B Z
A X
B Y
B Z
B X
C Y
A Z
B Z
C Y
C Y
C X
B Z
C X
C X
C X
C Y
A Z
C Z
B X
B Y
B Y
B Z
C Y
B Z
B Z
C Y
C X
B X
C Y"""

test_data = """A Y
B X
C Z"""

# Part 1:


def parse(input):
    return list(map(parse_throw_response, input.split('\n')))


def parse_throw_response(x):
    return x.split(' ')


# Calculate value of a Throw/Response pair
def calc_response_result(x: list) -> int:
    return response_outcome_value(x[0], x[1]) + get_value(x[1])


def get_value(t: str) -> int:
    if t == 'A' or t == 'X':  # Rock
        return 1
    if t == 'B' or t == 'Y':  # Paper
        return 2
    if t == 'C' or t == 'Z':  # Scissors
        return 3
    raise ValueError('t is not one of: A,B,C or X,Y,Z')


# Calculate point value for a throw and response
def response_outcome_value(throw: str, response: str) -> int:
    # Draw
    if get_value(throw) == get_value(response):  # Compare value
        return 3
    # Wins
    if throw == 'A' and get_value(response) == 2:  # Rock -> Paper
        return 6
    if throw == 'B' and get_value(response) == 3:  # Paper -> Scissors
        return 6
    if throw == 'C' and get_value(response) == 1:  # Scissors -> Rock
        return 6
    # Loss
    return 0


def total(outcomes: list) -> int:
    return sum(list(map(calc_response_result, outcomes)))


# Break data on newlines, map and split on space, as list
# = List[Throw, Response]
vals = parse(data)

# Calculate and sum match results
print(total(vals))  # Answer: 14069

# Part 2:


# Given opponent throw and response 'code', return required counter throw for desired outcome
def decode_strategy(throw: str, response: str) -> str:
    # X - lose
    # Y - draw
    # Z - win

    # Draw
    if response == 'Y':
        return throw

    option = next(
        (t for t in options if t.code == throw),
        None
    )

    # Loss required
    if response == 'X':
        return option.wins_against

    # Win required
    if response == 'Z':
        return option.loses_against


def decode(x):
    x[1] = decode_strategy(x[0], x[1])
    return x


class Throw:
    def __init__(self, code, name, wins_against, loses_against):
        self.code = code
        self.name = name
        self.wins_against = wins_against
        self.loses_against = loses_against


rock = Throw('A', 'rock', 'C', 'B')
paper = Throw('B', 'paper', 'A', 'C')
scissors = Throw('C', 'scissors', 'B', 'A')
options = [rock, paper, scissors]

# TODO: Can't we just skip all this and total wins/losses/draws?

part2_vals = parse(data)
part2_vals_decoded = list(map(decode, part2_vals))

print(total(part2_vals_decoded))  # Answer: 12411
